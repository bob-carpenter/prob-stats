
# Random Variables

Stan is a probabilistic programming language in the sense that its
variables can be random as well as deterministic.  Each time Stan is
run, these random variables can take on different values.

## Hello, World!

For example, consider the Stan equivalent of the conventional "Hello
World" program. 

##### `flip.stan`
```stan
generated quantities {
  int<lower=0, upper=1> y = bernoulli_rng(0.5);
}
```

This trivial Stan program assigns the variable `y` randomly, with a
50% chance of a 1 value and 50% chance of a 0 value.

The program begins with a *block declaration*, here `generated
quantities`.  The *generated quantities block* is used to generate
random quantities based on the state of other program variables.  The
variable `y` is declared to be an integer with `int` and to fall
between 0 and 1 (inclusive) with `lower=0` and `upper=1`.  The
variables value is the result of executing the function
`bernoulli_rng` applied to the argument expression `0.5`.

The value of `bernoulli_rng` is random, returning 1 with the specified
probability of 0.5 (a 50% chance) and returning 0 with probability
0.5.

We use Python to run the code and show the result of the simulated
coin flip.


```{python}
from cmdstanpy import CmdStanModel
import logging
cmdstanpy_logger = logging.getLogger("cmdstanpy")
cmdstanpy_logger.disabled = True

model = CmdStanModel(stan_file = "flip.stan")
fit = model.sample(seed=1234, show_progress=False, show_console = False)
df = fit.draws_pd()
y = df['y']
print("first flip = {0:.0f}".format(y[0]))
```

We'll repeat the first flip and show 9 more simulations.

```{python}
for i in range(10):
    print("flip y({0:d}) = {1:.0f}".format(i, y[i]))
```
